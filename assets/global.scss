@import "normalize.css";
html {
  overflow-x: hidden;
}
body {
  // font-family: "Source Sans Pro", sans-serif !important;
  font-family: "Lobster", cursive !important;
  font-size: 16px;
}
.v-application {
  font-family: "Lobster", cursive !important;
}

.bg-blue {
  background-color: hsl(215, 70%, 47%);
}
.bg-red {
  background-color: hsl(0, 75%, 41%) !important;
}
.bg-md-green {
  background-color: hsl(129, 31%, 53%) !important;
}
.bg-dk-green {
  background-color: hsl(157, 21%, 14%) !important;
}
.container {
  max-width: 1440px;
}
.pokerBoard {
  color: white;
  height: auto;
  min-height: 100vh;
  margin: 0;
  background: radial-gradient(#34b445, #000000);
  background-repeat: repeat-y;
  background-color: #000000;
  box-shadow: 5px 1px 10px #000000;
  /* display: flex; */
  /* place-items: center; */
  flex-wrap: wrap;
  position: relative;
  /* display: grid;
  
  grid-template-rows: repeat(5, 1fr); */
  /* grid-template-columns: repeat(4, 1fr); */
}
.button {
  border: none;
  font-size: 1.125rem;
  color: white !important;
  min-width: 80px;
  // height: 100%;
  min-height: 30px;
  line-height: 30px;
  text-decoration: none;
  text-transform: capitalize;
  text-align: center;
  padding: 0 1.25rem;
  border-radius: 4px;
  font-family: "Lobster", cursive !important;
  &:hover {
    cursor: pointer;
  }
}

.bg-dark-red {
  background-color: hsl(0, 73%, 41%);
}
.bg-black {
  background-color: black;
}

.from-opaque {
  animation-name: from-opaque;
  animation-timing-function: cubic-bezier(0.5, 0, 0.2, 1);
  animation-duration: 1000ms;
  animation-delay: 1500ms;
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@keyframes from-opaque {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}
.top-down {
  animation-name: top-down;
  animation-timing-function: cubic-bezier(0.5, 0, 0.2, 1);
  animation-duration: 800ms;
  animation-iteration-count: 1;
  animation-fill-mode: both;
}
@keyframes top-down {
  from {
    opacity: 0;
    transform: translate3d(0px, -100%, 0px) scale3d(1, 1, 1) rotateX(0deg)
      rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);
    transform-style: preserve-3d;
  }

  to {
    opacity: 1;
    transform: translate3d(0px, 0px, 0px) scale3d(1, 1, 1) rotateX(0deg)
      rotateY(0deg) rotateZ(0deg) skew(0deg, 0deg);
    transform-style: preserve-3d;
  }
}
